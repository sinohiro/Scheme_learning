(define uru-u
  (lambda (x)
    (cond
     ((= (modulo x 400) 0) '#t)
     ((= (modulo x 100) 0) '#f)
     ((= (modulo x 4) 0) '#t)
     (else '#f)
     )
    )
  )

(define normal
  (lambda (y z)
    (cond
     ((= y 1) z)
     ((= y 2) (+ z 31))
     ((= y 3) (+ z 28 31))
     ((= y 4) (+ z 31 28 31))
     ((= y 5) (+ z 30 31 28 31))
     ((= y 6) (+ z 31 30 31 28 31))
     ((= y 7) (+ z 30 31 30 31 28 31))
     ((= y 8) (+ z 31 30 31 30 31 28 31))
     ((= y 9) (+ z 31 31 30 31 30 31 28 31))
     ((= y 10) (+ z 30 31 31 30 31 30 31 28 31))
     ((= y 11) (+ z 31 30 31 31 30 31 30 31 28 31))
     ((= y 12) (+ z 30 31 30 31 31 30 31 30 31 28 31))
     (else 'error)
     )
    )
  )


(define uru-u-year
  (lambda (y z)
    (cond
     ((= y 1) z)
     ((= y 2) (+ z 31))
     ((= y 3) (+ z 29 31))
     ((= y 4) (+ z 31 29 31))
     ((= y 5) (+ z 30 31 29 31))
     ((= y 6) (+ z 31 30 31 29 31))
     ((= y 7) (+ z 30 31 30 31 29 31))
     ((= y 8) (+ z 31 30 31 30 31 29 31))
     ((= y 9) (+ z 31 31 30 31 30 31 29 31))
     ((= y 10) (+ z 30 31 31 30 31 30 31 29 31))
     ((= y 11) (+ z 31 30 31 31 30 31 30 31 29 31))
     ((= y 12) (+ z 30 31 30 31 31 30 31 30 31 29 31))
     (else 'error)
     )
    )
  )

(define count-days
  (lambda (x y z)
     (if (uru-u x) (uru-u-year y z) (normal y z))
     )
    )
